#!/bin/bash

# Fonction d'affichage de l'aide
print_usage() {
    echo "Usage: $0 [options]"
    echo "Options:"
    echo "  -t, --tag-suffix SUFFIX   Ajoute un suffixe au tag de l'image"
    echo "  -h, --help            Affiche l'aide"
    exit 1
}

source "$(dirname "${BASH_SOURCE[0]}")"/subito-lib-path-resolver
CIPATH=$(subitoLibPathResolver)
source "$CIPATH"/helpers/getBranch
source "$CIPATH"/helpers/getBuild
source "$CIPATH"/helpers/getSlug
source "$CIPATH"/helpers/getTag

# Variables par dÃ©faut
TMP_IMAGE="tmp-image.docker"
TAG_SUFFIX=""

# Traitement des options de ligne de commande
while [[ $# -gt 0 ]]; do
    key="$1"

    case $key in
        -t|--tag-suffix)
            TAG_SUFFIX="$2"
            shift
            shift
            ;;
        -h|--help)
            print_usage
            ;;
        *)
            echo "Option inconnue: $1"
            print_usage
            ;;
    esac
done

BUILD=$(getBuild)
SLUG=$(getSlug)
TAG=$(getTag)
if [ ! -z "$TAG_SUFFIX" ]; then
    TAG="$TAG-$TAG_SUFFIX"
    TMP_IMAGE="tmp-image-$TAG_SUFFIX.docker"

fi

docker load --input ./"$TMP_IMAGE"

# Authenticating with the service account key file
echo $GCR_API_KEYFILE > ./gcloud-api-key.json
# Login to google docker hub
gcloud auth activate-service-account --key-file gcloud-api-key.json
gcloud config set project $CR_PROJECT
cat ./gcloud-api-key.json | docker login -u _json_key --password-stdin $CR_URL

REGISTRY_URL=${CR_URL}/${CR_PROJECT}
BRANCH=$(getBranch)
git tag -a "$TAG" -m "Tag from CI"
git pull origin "$BRANCH"
git push origin "$BRANCH" --tags

IMAGE="$REGISTRY_URL"/"$SLUG":"$TAG"
IMAGE_LATEST="$REGISTRY_URL"/"$SLUG":"$BUILD"-latest
docker tag ${TAG} ${IMAGE} 
docker tag ${TAG} ${IMAGE_LATEST} 
docker push ${IMAGE}
docker push ${IMAGE_LATEST}
